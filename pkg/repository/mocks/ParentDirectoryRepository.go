// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	model "github.com/jonatan5524/side-projects-manager/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// ParentDirectoryRepository is an autogenerated mock type for the ParentDirectoryRepository type
type ParentDirectoryRepository struct {
	mock.Mock
}

// Delete provides a mock function with given fields: _a0
func (_m *ParentDirectoryRepository) Delete(_a0 model.ParentDirectory) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.ParentDirectory) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteByPath provides a mock function with given fields: _a0
func (_m *ParentDirectoryRepository) DeleteByPath(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *ParentDirectoryRepository) GetAll() ([]*model.ParentDirectory, error) {
	ret := _m.Called()

	var r0 []*model.ParentDirectory
	if rf, ok := ret.Get(0).(func() []*model.ParentDirectory); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.ParentDirectory)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Put provides a mock function with given fields: _a0
func (_m *ParentDirectoryRepository) Put(_a0 model.ParentDirectory) (uint64, error) {
	ret := _m.Called(_a0)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(model.ParentDirectory) uint64); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.ParentDirectory) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
